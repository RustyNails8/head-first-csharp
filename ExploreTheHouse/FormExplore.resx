<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMjIAAAEAGABoHwAAFgAAACgAAAAyAAAAZAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAADQoKUTw8DQoKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTPT25iYhSPTwAAAAA
        AAAAAAAAAAAAAAAAAAABAQElIiJNR0doX190amp0ampoX19MRkYlIiIBAQEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAA4KClI9PA0KCgAAAAAAAAAAAAUEBEtFRaOVleTR0fnk5Pnk5Pnk5Pnk
        5Pnk5Pnk5Pnk5Pnk5OTR0aKUlEpERAQEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAABQQEaF9f28jI+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk28jIZ15e
        BQQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5NDTPvr755OT55OT55OT55OT55OT55OT55OT5
        5OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OTOvb04MzMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEB
        AXVra/Xg4Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk
        5Pnk5Pnk5PXg4HNqagAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDl4uL+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk
        +eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTkloqKAwMDGjxKVMLtGjtJ
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQGX
        i4v55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT5
        5OT55OT55OT55OT55OT55OT55OSWioobPUtUwu0aPEoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHZsbPnk5Pnk5Pnk5M6+xJGJl4qDkoqDkoqDkoqDkoqD
        koqDkn14iHBrfnBrfnBrfnBrfn14iIqDkoqDkoqDkoqDkoqDkoqDkpGJl86/xPnk5Pnk5Pnk5HNqagAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOzY2
        9eDg+eTk+eTkzb3DjIiWyr7Dy7/Ey7/Ey7/Ey7/Ey7/Ey7/EaW2GOmekOmekOmekOmekaW2Gy7/Ey7/E
        y7/Ey7/Ey7/Ey7/Eyr7EiISUzr/E+eTk+eTk9eDgODMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEBATNvLz55OT55OT55OSVjZrKv8TLur7Lur7Lur7Lur7L
        ur7Lur7Lur5pa4RAfcZAfcZAfcZAfcZpa4TLur7Lur7Lur7Lur7Lur7Lur7Lur7Kv8SWjZr55OT55OT5
        5OTPvr4FBAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEnLydbb2Z1
        ffnk5Pnk5Pnk5Pnk5JGKmMvAxMu6vsu6vsu6vsu6vsu6vsu6vsu6vmlrhEB9xkB9xkB9xkB9xmlrhMu6
        vsu6vsu6vsu6vsu6vsu6vsu6vsvAxZGKmPnk5Pnk5Pnk5Pnk5GdeXgAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAEScwV8n2Wc37W8362+Do+eTk+eTk+eTkiIORf32Nj4qXx7/EhYGP
        hYGPj4qXx7/EhYGPT1ZyQH3GQH3GQH3GQH3GT1ZyhYGPhYGPhYGPhYGPhYGPgn6NenaHdXOEfXeI+eTk
        +eTk+eTk+eTk28jIBAQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoXHFZzftZ
        zftZzfuy2u755OT55OT55OSRipjL1Nr0/v/0/v/0/v/0/v/0/v/0/v/0/v94hJxAfcZAfcZAfcZAfcZ4
        hJz0/v/0/v/0/v/0/v/0/v/0/v/0/v/L1NqRipj55OT55OT55OT55OT55ORJQ0MAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEoMVjK91nN+1zN+tvg6Pnk5Pnk5Pnk5JGKmMvU2vT+//T+
        //T+//T+//T+//T+//T+/36LoT97w0B9xkB9xj96wn+LofT+//T+//T+//T+//T+//T+//T+/8vU2pGK
        mPnk5Pnk5Pnk5Pnk5Pnk5KKUlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        Eyozp9Dk2t/o+eTk+eTk+eTk+eTkkYqYy9Ta9P7/jJCYhIJ2hIJ2hIJ2jJCY9P7/v8rTQ2mfQH3GQH3G
        RGmfwMvU9P7/jJCYhIJ2hIJ2hIJ2jJCY9P7/y9TakYqY+eTk+eTk+eTk+eTk+eTk5NDQAQEBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoJSX55OT55OT55OT55OT55OT55OSRipjL1Nr0
        /v+LjpTXzYjXzYjXzYiLjpT0/v/0/v+Pm69SaI5UapCTn7L0/v/0/v+LjpTXzYjXzYjXzYiLjpT0/v/L
        1NqRipj55OT55OT55OT55OT55OT55OQmIyMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAE9ISPnk5Pnk5Pnk5Pnk5Pnk5Pnk5JGKmMvU2vT+/4OGjrKqerKqeqmhd4OGjvT+//T+//T+//T+
        //T+//T+//T+//T+/4OGjrKqerKqeqmhd4OGjvT+/8vU2pGKmPnk5Pnk5Pnk5Pnk5Pnk5Pnk5ExGRgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaWFh+eTk+eTk+eTk+eTk+eTk+eTkkYqY
        y9Ta9P7/i46U182I182I182Ii46U9P7/9P7/9P7/9P7/9P7/9P7/9P7/9P7/i46U182I182I182Ii46U
        9P7/y9TakYqY+eTk+eTk+eTk+eTk+eTk+eTkaGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAB3bW355OT55OT55OT55OT55OT55OSRipjL1Nr0/v+/x8yLjpSLjpSLjpS/x8z0/v/0/v/0
        /v/0/v/0/v/0/v/0/v/0/v+/x8yLjpSLjpSLjpS/x8z0/v/L1NqRipj55OT55OT55OT55OT55OT55OR2
        bGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHdtbfnk5Pnk5Pnk5Pnk5Pnk5Pnk
        5JGKmMvU2vT+//T+//T+//T+//T+//T+//T+//T+//T+//T+//T+//T+//T+//T+//T+//T+//T+//T+
        //T+//T+/8vU2pGKmPnk5Pnk5Pnk5Pnk5Pnk5Pnk5HZsbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAamFh+eTk+eTk+eTk+eTk+eTk7dnbRkNpSUZ5TUt/TUt/TUt/TUt/TUt/TUt/WFl7
        8vz+9P7/9P7/9P7/9P7/8vz+WFl7TUt/TUt/TUt/TUt/TUt/TUt/SUZ5RkNo7trc+eTk+eTk+eTk+eTk
        +eTkaGBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABPSEj55OT55OT55OT55OT5
        5OSajqFURrZnUepnUepnUepnUepnUepnUepnUepVSqqTmKz0/v/0/v/0/v/0/v+TmKxVSqpnUepnUepn
        UepnUepnUepnUepnUepURbWaj6H55OT55OT55OT55OT55ORMRkYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAACglJfnk5Pnk5Pnk5Pnk5Pnk5H93kE1BpltJy2JO21dGv1dGv1dGv1dGv1JF
        s2JO20pIfNLa4PT+//T+/9Td4klIe15M01RFuFdGv2JO3VhIwldGv1dGv1dGv01BpoN6k/nk5Pnk5Pnk
        5Pnk5Pnk5CYjIwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgIC5dLS+eTk+eTk
        +eTk+eTkhn2WWkrJZ1HqZ1HqZ1HqZ1HqZ1HqZ1HqZ1HqWUjHYE3ZUVJ28Pr78fv8UlJ4YE3XWUjHZ1Hq
        Z1HqZ1HqZ1HqZ1HqZ1HqZ1HqWkrJhn2W+eTk+eTk+eTk+eTk5tPTAgICAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACll5f55OT55OT55OT55OSGfZZaSslnUepnUepnUepnUepnUepn
        UepnUepmUehZScZVSrCJjaSIjaRXS7BZSMRnUepnUepnUepnUepnUepnUepnUepnUepaSsmGfZb55OT5
        5OT55OT55OSilJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAE5ISPnk
        5Pnk5Pnk5Pnk5IZ9llpKyWdR6mdR6mdR6mdR6mdR6mdR6mdR6mdR6lpJyGBN2EtHgEtHgF5M011M0WdR
        6mdR6mdR6mdR6mdR6mdR6mdR6mdR6lpKyYZ9lvnk5Pnk5Pnk5Pnk5EpERAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQQE3crK+eTk+eTk+eTkhn2WWkrJZ1HqZ1HqZ1HqZ1Hq
        Z1HqZ1HqZ1HqZ1HqZ1HqVEa4Yk7cYE3ZVke+Z1HqZ1HqZ1HqZ1HqZ1HqZ1HqZ1HqZ1HqZ1HqWkrJhn2W
        +eTk++3t+ufn28jIBQQEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABqYWH55OT55OT55OSGfZZaSslnUepnUepnUepnUepnUepnUepnUepnUepnUeplUOZXR8BURbhmUehn
        UepnUepnUepnUepnUepnUepnUepnUepnUepaSsmGfZb55OT++vr77e1oX18AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYFBdG/v/nk5Pnk5Il/mFpJx2dR6mdR6mdR
        6mdR6mdR6mdR6mdR6mdR6mdR6mdR6l1Lz2BN2WdR6mdR6mdR6mdR6mdR6mdR6mdR6mdR6mdR6mdR6lpJ
        x4qAmfnk5Pnk5NC+vgUEBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAPDc39uHh+eTkxbS+R0F/WknHWkrJWkrJWkrJWkrJWkrJWkrJWkrJWkrJWkrJWkrJWkrJ
        WkrJWkrJWkrJWkrJWkrJWkrJWkrJWkrJWkrJWknHR0B/xra++eTk9eDgOTQ0AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4bm755OT55OTFtL55cYxh
        XXthXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXphXXt5
        cYzGtb755OT55OR1a2sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAEBAZeLi/nk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk
        5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5J6RkQEBAQAAAAAAADYoKK+BgTYo
        JwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDmIuL+eTk
        +eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk
        +eTk+eTk+eTkl4uLAwMDAAAAAAAAAAAANykpr4GBNigoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAQF4bm724eH55OT55OT55OT55OT55OT55OT55OT55OT5
        5OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT55OT14OB2bGwBAQEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAADw3N9G/v/nk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk5Pnk
        5Pnk5NC+vjs2NgAAAAAAAAAAAAAAAAUjLQtTawUjLAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgUFamFh3crK+eTk+eTk+eTk+eTk
        +eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk+eTk3MnJaWFhBQQEAAAAAAAAAAAAAAAABSQuGbjsGbzx
        GbjsBSMsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAFBARNR0emmJjm09P55OT55OT55OT55OT55OT55OT55OT55OTm09Oll5dM
        RkYFBAQAAAAAAAAAAAAAAAAAAAAAAAALVW0ZvPEZvPEZvPELVGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIC
        AickJE9ISGlhYXRqanRqamlhYU9ISCckJAICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABKFqwUlLxm5
        7Rm88Rm47AUjLQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABSUvC1RsBSQuAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA////////wAD////////AAP//
        /////8AA////////wAD////////AAP/j/////8AA/+PwA///wAD/44AAf//AAP/+AAAf/8AA//wAAA//
        wAD/8AAAB//AAP/gAAAAP8AA/8AAAAA/wAD/wAAAAP/AAP+AAAAAf8AA/wAAAAA/wAD8AAAAAD/AAPgA
        AAAAH8AA+AAAAAAfwAD4AAAAAB/AAPwAAAAAD8AA/AAAAAAPwAD8AAAAAA/AAPwAAAAAD8AA/AAAAAAP
        wAD8AAAAAA/AAPwAAAAAD8AA/AAAAAAPwAD8AAAAAA/AAPwAAAAAD8AA/gAAAAAfwAD+AAAAAB/AAP4A
        AAAAH8AA/wAAAAA/wAD/AAAAAD/AAP+AAAAAf8AA/8AAAAD/wAD/wAAAAMfAAP/gAAABx8AA//AAAAP/
        wAD//AAADx/AAP/+AAAeD8AA//+AAH4PwAD///AD/A/AAP//////H8AA////////wAD////////AAP//
        /////8AA////////wAD////////AAA==
</value>
  </data>
</root>